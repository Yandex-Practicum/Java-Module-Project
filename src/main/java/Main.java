import java.util.Scanner;

public class Main {
        public static void main(String[] args) {
            Purchases item = new Purchases();
            item.friends();
            item.allItem();
            System.out.println(Purchases.allName);
            item.result();
    }

    public static class Purchases {
        Scanner scanner = new Scanner(System.in);
        static String name; 				// –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –±–ª—é–¥–∞
        static double cost; 			// —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –±–ª—é–¥–∞ float
        static String costString;				// —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –±–ª—é–¥–∞ String
        static String allName = "\n–í–∞—à —Å–ø–∏—Å–æ–∫ –±–ª—é–¥:\n"; 		// —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–ª—é–¥
        static double allCost;				// –æ–±—â–∞—è —Å—É–º–º–∞
        String friendsString;						// –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π
        static int friends;							// –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π
        boolean a=true;
        static String rubString;
        static String kopeckString;
        static int rub;
        static int kopeck;
        static String money;

        public void friends() {				//* –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥—Ä—É–∑–µ–π
            System.out.println("–ü—Ä–∏–≤–µ—Ç! –Ø –ø—Ä–æ–≥—Ä–∞–º–º–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –¥–µ–ª–∏—Ç—å —Å—á—ë—Ç –º–µ–∂–¥—É –¥—Ä—É–∑—å—è–º–∏ –ø–æ—Ä–æ–≤–Ω—É. \n–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–æ–ª—å–∫–æ –≤–∞—Å.");
            while (a) {
                friendsString = scanner.nextLine();
                try {
                    friends = Integer.parseInt(friendsString.trim());
                    if (friends<=1) {
                        System.out.println("–í—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Å—á—ë—Ç –Ω–∞ " + friends + "? –≠—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ. –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç–æ—è—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π.");
                        a=true;
                    }
                    else if ((friends%100==11) || (friends%100==12) || (friends%100==13)) {
                        System.out.println("–û–∫, —Å—á—ë—Ç –±—É–¥–µ—Ç —Ä–∞–∑–¥–µ–ª—ë–Ω –Ω–∞ " + friends + " –¥—Ä—É–∑–µ–π.");
                        a=false;
                    }
                    else if ((friends%10==1) || (friends%10==2) || (friends%10==3)) {
                        System.out.println("–û–∫, —Å—á—ë—Ç –±—É–¥–µ—Ç —Ä–∞–∑–¥–µ–ª—ë–Ω –Ω–∞ " + friends + " –¥—Ä—É–≥–∞.");
                        a=false;
                    }
                    else {
                        System.out.println("–û–∫, —Å—á—ë—Ç –±—É–¥–µ—Ç —Ä–∞–∑–¥–µ–ª—ë–Ω –Ω–∞ " + friends + " –¥—Ä—É–∑–µ–π.");
                        a=false;
                    }
                }
                catch (NumberFormatException nfe) {
                    System.out.println("–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–∏—Å–ª–æ, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –∞—Ä–∞–±—Å–∫–∏–µ —Ü–∏—Ñ—Ä—ã.");
                }
            }
        }

        public void nameItem() {	//* –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
            System.out.println("\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å. \n–ï—Å–ª–∏ –±–ª—é–¥ –±–æ–ª—å—à–µ –Ω–µ—Ç, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ \"–∑–∞–≤–µ—Ä—à–∏—Ç—å\".");
            name = scanner.nextLine();
        }

        public void costItem() {	//* –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            System.out.println("–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '—Ä—É–±–ª–∏.–∫–æ–ø–µ–π–∫–∏' (00.00)");
            while (((scanner.hasNextDouble()))||((scanner.hasNextInt()))) {
                System.out.println("–ü–æ—Å—Ç—Ä–∞–π—Ç–µ—Å—å –ø–∏—Å–∞—Ç—å —Å—Ç—Ä–æ–≥–æ –ø–æ —Ñ–æ—Ä–º–∞—Ç—É: '—Ä—É–±–ª–∏.–∫–æ–ø–µ–π–∫–∏' (00.00), –∏–Ω–∞—á–µ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. /n –ù.–ø., 15 —Ä—É–±–ª–µ–π –∏ 26 –∫–æ–ø–µ–µ–∫ –Ω–∞–¥–æ –ø–∏—Å–∞—Ç—å –∫–∞–∫ '15.26'");
                costString = scanner.nextLine();
            }
            costString = scanner.nextLine();
            cost = Double.valueOf(costString);
        }

        public void money() {		//* –º–µ—Ç–æ–¥ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
            Purchases item = new Purchases();
            item.costItem();
            rub = (int)cost;
            kopeck =(int) Math.round((cost - rub)*100);
            item.beauty();
            money = rubString + kopeckString;
        }


        public void allItem() {		//* –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –±–ª—é–¥ –∏ –æ–±—â–µ–π —Å—É–º–º—ã
            Purchases item = new Purchases();
            item.nameItem();
            while (!(name.equalsIgnoreCase("–∑–∞–≤–µ—Ä—à–∏—Ç—å"))) {
                item.money();
                allName = allName + "  ü•£  " + name + " - " + money + "\n";
                allCost+=cost;
                rub = (int) allCost;
                kopeck =(int) Math.round((allCost - rub)*100);
                item.beauty();
                System.out.println("–ë–ª—é–¥–æ \"" + name + "\" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ. \n–¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: " + rubString + kopeckString);
                item.nameItem();
            }
        }

        public void result() {
            rub = (int) allCost;
            kopeck =(int) Math.round((allCost - rub)*100);
            Purchases item = new Purchases();
            item.beauty();
            System.out.println("–û–±—â–∞—è —Å—É–º–º–∞ - " + rubString + kopeckString);
            allCost/=friends;
            rub = (int) allCost;
            kopeck =(int) Math.round((allCost - rub)*100);
            item.beauty();
            System.out.println("–°—É–º–º–∞ –Ω–∞ –∫–∞–∂–¥–æ–≥–æ - " + rubString + kopeckString);
        }

        public void beauty() {
            if ((rub%100>=11)&&(rub%100<=19)) {
                rubString = rub + " —Ä—É–±–ª–µ–π ";
            }
            else if (rub%10==1) {
                rubString = rub + " —Ä—É–±–ª—å ";
            }
            else if ((rub%10>=2)&&(rub%10<=4)) {
                rubString = rub + " —Ä—É–±–ª—è ";
            }
            else {
                rubString = rub + " —Ä—É–±–ª–µ–π ";
            }
            if ((kopeck%100>=11)&&(kopeck%100<=19)) {
                kopeckString = kopeck + " –∫–æ–ø–µ–µ–∫ ";
            }
            else if (kopeck%10==1) {
                kopeckString = kopeck + " –∫–æ–ø–µ–π–∫–∞ ";
            }
            else if ((kopeck%10>=2)&&(kopeck%10<=4)) {
                kopeckString = kopeck + " –∫–æ–ø–µ–π–∫–∏ ";
            }
            else {
                kopeckString = kopeck + " –∫–æ–ø–µ–µ–∫ ";
            }
        }
    }
}

